<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vc.thinker.cabbage.stats.mapper.OrderStatsMapper">
  <resultMap id="BaseResultMap" type="vc.thinker.cabbage.stats.model.OrderStats">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="stats_date" jdbcType="TIMESTAMP" property="statsDate" />
    <result column="distance" jdbcType="DECIMAL" property="distance" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="actual_consume" jdbcType="DECIMAL" property="actualConsume" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="trip_amount" jdbcType="DECIMAL" property="tripAmount" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="client_type" jdbcType="VARCHAR" property="clientType" />
    <result column="discount_type" jdbcType="INTEGER" property="discountType" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="sys_code" jdbcType="VARCHAR" property="sysCode" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BOResultMap" type="vc.thinker.cabbage.stats.bo.OrderStatsBO" />
  
  <resultMap id="CountStatsMap" type="vc.thinker.cabbage.stats.bo.CountStatsBO" />
  
  	<delete id="deleteByDate">
  		 delete  from se_order_stats
         <where>
	        <if test="beginDate != null and beginDate != ''">
	            AND DATE_FORMAT(stats_date,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{beginDate},'%Y-%m-%d')
	        </if>
	         <if test="endDate != null and endDate != ''">
	            AND DATE_FORMAT(stats_date,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate},'%Y-%m-%d')
	        </if>
         </where>
  	</delete>
  	
  	<select id="countByDateGoupByCurrency" resultMap="BOResultMap">
  		select
        sum(trip_amount) actualConsume,currency
        from se_order_stats
        <where>
	        <if test="year!=null and year!=''">
	            AND DATE_FORMAT(stats_date,'%Y') <![CDATA[ = ]]> #{year}
	        </if>
	        <if test="month!=null and month!=''">
	            AND DATE_FORMAT(stats_date,'%m') <![CDATA[ = ]]> #{month}
	        </if>
        </where>
        group by currency
  	</select>
  	
  	<select id="countByTime" resultMap="BOResultMap">
  	
  		select
        count(1) orderNum
        from se_order_stats
        <where>
	        <if test="year!=null and year!=''">
	            AND DATE_FORMAT(stats_date,'%Y') <![CDATA[ = ]]> #{year}
	        </if>
	        <if test="month!=null and month!=''">
	            AND DATE_FORMAT(stats_date,'%m') <![CDATA[ = ]]> #{month}
	        </if>
        </where>
        
  	</select>
  	
  	
  	<select id="orderConsumeStats" resultMap="CountStatsMap">
  		SELECT
			<if test="vo.statsType!=null and vo.statsType==&quot;1&quot; ">
				DATE_FORMAT(stats_date, '%m') AS statsTime,
			</if>
			<if test="vo.statsType!=null and vo.statsType==&quot;2&quot; ">
				DATE_FORMAT(stats_date, '%d') AS statsTime,
			</if>
			sum(trip_amount) consume,currency
		FROM
			se_order_stats
		<where>
			<if test="vo.statsType!=null and vo.statsType==&quot;1&quot; ">
				and DATE_FORMAT(stats_date, '%Y') = #{vo.time}
			</if>
			<if test="vo.statsType!=null and vo.statsType==&quot;2&quot; ">
				and DATE_FORMAT(stats_date, '%Y-%m') = #{vo.time}
			</if>
			<if test="null != vo.payType and '' != vo.payType">
				and pay_type = #{vo.payType}
			</if>
			
		</where>
		group by currency ,statsTime
		ORDER BY statsTime
  	</select>
  	
  	<select id="groupByPayType" resultMap="BOResultMap">
  		select pay_type, sum(trip_amount) trip_amount  from se_order_stats group by pay_type 
  	</select>
  		
  	<select id="findTripInfoByAgeRange" resultType="java.math.BigDecimal">
        select
        <if test="type=='orderNum'">
            count(*)
        </if>
        <if test="type=='consume'">
         COALESCE(sum(actual_consume)/1000,0) 
        </if>
        from se_order_stats
        <where>
	        <if test="date != null and date != ''">
	            AND DATE_FORMAT(stats_date,'%Y-%m-%d') <![CDATA[ = ]]> DATE_FORMAT('${date}','%Y-%m-%d')
	        </if>
	        <if test="age1 != null ">
	            AND age <![CDATA[ >= ]]>#{age1}
	        </if>
	        <if test="age2 != null ">
	            AND age <![CDATA[ <= ]]>#{age2}
	        </if>
        </where>
    </select>
    
  	<select id="findTripInfoByTimeRange" resultType="java.math.BigDecimal">
        select
        <if test="type=='orderNum'">
            count(1)
        </if>
        <if test="type=='consume'">
            sum(actual_consume)
        </if>
        from se_order_stats
        <where>
	        <choose>
	        	<when test="day=='total'">
	        		<if test="time1 != null and time1 != ''">
			            AND DATE_FORMAT(stats_date,'%H:%i:%s') <![CDATA[ >= ]]> #{time1}
			        </if>
			        <if test="time2 != null and time2 != ''">
			            AND DATE_FORMAT(stats_date,'%H:%i:%s') <![CDATA[ <= ]]> #{time2}
			        </if>
	        	</when>
	        	<otherwise>
	        		<if test="time1 != null and time1 != ''">
			            AND DATE_FORMAT(stats_date,'%Y-%m-%d%H%i%s') <![CDATA[ >= ]]> DATE_FORMAT(#{time1},'%Y-%m-%d%H%i%s')
			        </if>
			        <if test="time2 != null and time2 != ''">
			            AND DATE_FORMAT(stats_date,'%Y-%m-%d%H%i%s') <![CDATA[ <= ]]> DATE_FORMAT(#{time2},'%Y-%m-%d%H%i%s')
			        </if>        	
	        	</otherwise>
	        </choose>
        </where>
    </select>
    
  	<select id="findTripInfoByGroupType" resultType="vc.thinker.cabbage.stats.bo.RealTimeGroupStatsBO" statementType="STATEMENT">
        select
        ${groupType} groupName,
        <if test="type=='tripNum'">
            count(1)
        </if>
        <if test="type=='consume'">
            sum(actual_consume)
        </if>
        value
        from se_order_stats
        <where>
	        <if test="date != null and date != ''">
	            AND DATE_FORMAT(stats_date,'%Y-%m-%d') <![CDATA[ = ]]> DATE_FORMAT('${date}','%Y-%m-%d')
	        </if>
        </where>
        group by
        ${groupType}
   </select>
  
  <select id="countAvgByDate" resultMap="BOResultMap">
       select
        ROUND(count(*)/(to_days(#{endDate}) - to_days(#{beginDate})+1), 2) orderNum
        <!--  
        	ROUND(sum(actual_consume)/(to_days(#{endDate}) - to_days(#{beginDate})+1), 2) actualConsume
        -->
        from se_order_stats
        <where>
	        <if test="beginDate != null and beginDate != ''">
	            AND DATE_FORMAT(stats_date,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{beginDate},'%Y-%m-%d')
	        </if>
	        <if test="endDate != null and endDate != ''">
	            AND DATE_FORMAT(stats_date,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate},'%Y-%m-%d')
	        </if>
        </where>
    </select>
    
  <select id="countByDate" resultMap="BOResultMap">
        select
        count(1) orderNum
        <!--  
        sum(actual_consume) actualConsume
        -->
        from se_order_stats
        <where>
	        <if test="date != null and date != ''">
	            AND DATE_FORMAT(stats_date,'%Y-%m-%d') <![CDATA[ = ]]> DATE_FORMAT(#{date},'%Y-%m-%d')
	        </if>
        </where>
  </select>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, stats_date, distance, duration, actual_consume, discount_amount, trip_amount, 
    area, age, sex, client_type, discount_type, order_id, order_status, pay_type, sys_code, 
    currency
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.cabbage.stats.model.OrderStatsExample" resultMap="BOResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from se_order_stats
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap">
    select 
    <include refid="Base_Column_List" />
    from se_order_stats
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from se_order_stats
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.cabbage.stats.model.OrderStatsExample">
    delete from se_order_stats
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="vc.thinker.cabbage.stats.model.OrderStats" useGeneratedKeys="true">
    insert into se_order_stats (id, uid, stats_date, 
      distance, duration, actual_consume, 
      discount_amount, trip_amount, area, 
      age, sex, client_type, 
      discount_type, order_id, order_status, 
      pay_type, sys_code, currency
      )
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{statsDate,jdbcType=TIMESTAMP}, 
      #{distance,jdbcType=DECIMAL}, #{duration,jdbcType=INTEGER}, #{actualConsume,jdbcType=DECIMAL}, 
      #{discountAmount,jdbcType=DECIMAL}, #{tripAmount,jdbcType=DECIMAL}, #{area,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{clientType,jdbcType=VARCHAR}, 
      #{discountType,jdbcType=INTEGER}, #{orderId,jdbcType=BIGINT}, #{orderStatus,jdbcType=INTEGER}, 
      #{payType,jdbcType=VARCHAR}, #{sysCode,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="vc.thinker.cabbage.stats.model.OrderStats" useGeneratedKeys="true">
    insert into se_order_stats
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="statsDate != null">
        stats_date,
      </if>
      <if test="distance != null">
        distance,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="actualConsume != null">
        actual_consume,
      </if>
      <if test="discountAmount != null">
        discount_amount,
      </if>
      <if test="tripAmount != null">
        trip_amount,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="clientType != null">
        client_type,
      </if>
      <if test="discountType != null">
        discount_type,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="sysCode != null">
        sys_code,
      </if>
      <if test="currency != null">
        currency,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="statsDate != null">
        #{statsDate,jdbcType=TIMESTAMP},
      </if>
      <if test="distance != null">
        #{distance,jdbcType=DECIMAL},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="actualConsume != null">
        #{actualConsume,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="tripAmount != null">
        #{tripAmount,jdbcType=DECIMAL},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="clientType != null">
        #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="discountType != null">
        #{discountType,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="sysCode != null">
        #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.cabbage.stats.model.OrderStatsExample" resultType="java.lang.Integer">
    select count(*) from se_order_stats
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update se_order_stats
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.statsDate != null">
        stats_date = #{record.statsDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.distance != null">
        distance = #{record.distance,jdbcType=DECIMAL},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.actualConsume != null">
        actual_consume = #{record.actualConsume,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null">
        discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.tripAmount != null">
        trip_amount = #{record.tripAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.clientType != null">
        client_type = #{record.clientType,jdbcType=VARCHAR},
      </if>
      <if test="record.discountType != null">
        discount_type = #{record.discountType,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.sysCode != null">
        sys_code = #{record.sysCode,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update se_order_stats
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      stats_date = #{record.statsDate,jdbcType=TIMESTAMP},
      distance = #{record.distance,jdbcType=DECIMAL},
      duration = #{record.duration,jdbcType=INTEGER},
      actual_consume = #{record.actualConsume,jdbcType=DECIMAL},
      discount_amount = #{record.discountAmount,jdbcType=DECIMAL},
      trip_amount = #{record.tripAmount,jdbcType=DECIMAL},
      area = #{record.area,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=INTEGER},
      client_type = #{record.clientType,jdbcType=VARCHAR},
      discount_type = #{record.discountType,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=BIGINT},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      sys_code = #{record.sysCode,jdbcType=VARCHAR},
      currency = #{record.currency,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.cabbage.stats.model.OrderStats">
    update se_order_stats
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="statsDate != null">
        stats_date = #{statsDate,jdbcType=TIMESTAMP},
      </if>
      <if test="distance != null">
        distance = #{distance,jdbcType=DECIMAL},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="actualConsume != null">
        actual_consume = #{actualConsume,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="tripAmount != null">
        trip_amount = #{tripAmount,jdbcType=DECIMAL},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="clientType != null">
        client_type = #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="discountType != null">
        discount_type = #{discountType,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="sysCode != null">
        sys_code = #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.cabbage.stats.model.OrderStats">
    update se_order_stats
    set uid = #{uid,jdbcType=BIGINT},
      stats_date = #{statsDate,jdbcType=TIMESTAMP},
      distance = #{distance,jdbcType=DECIMAL},
      duration = #{duration,jdbcType=INTEGER},
      actual_consume = #{actualConsume,jdbcType=DECIMAL},
      discount_amount = #{discountAmount,jdbcType=DECIMAL},
      trip_amount = #{tripAmount,jdbcType=DECIMAL},
      area = #{area,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      client_type = #{clientType,jdbcType=VARCHAR},
      discount_type = #{discountType,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=BIGINT},
      order_status = #{orderStatus,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=VARCHAR},
      sys_code = #{sysCode,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>