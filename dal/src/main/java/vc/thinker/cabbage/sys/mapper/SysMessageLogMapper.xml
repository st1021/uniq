<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vc.thinker.cabbage.sys.mapper.SysMessageLogMapper" >
  <resultMap id="BaseResultMap" type="vc.thinker.cabbage.sys.model.SysMessageLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="image_text_id" property="imageTextId" jdbcType="BIGINT" />
    <result column="is_image_text" property="isImageText" jdbcType="BIT" />
    <result column="to_user_ids" property="toUserIds" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="is_send_all" property="isSendAll" jdbcType="BIT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="from_user_id" property="fromUserId" jdbcType="BIGINT" />
    <result column="is_platform" property="isPlatform" jdbcType="BIT" />
    <result column="send_type" property="sendType" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BOResultMap" type="vc.thinker.cabbage.sys.bo.SysMessageLogBO" extends="BaseResultMap" />
  
  <select id="findPageByVo" resultMap="BOResultMap">
  		select 
  			l.*,t.cover,t.title
  		from 
  			sys_message_log l
  			left join sys_image_text t on l.image_text_id = t.id and l.is_image_text = 1 
  		order by l.send_time desc 
  </select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, content, image_text_id, is_image_text, to_user_ids, send_time, is_send_all, status, 
    from_user_id, is_platform, send_type
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.cabbage.sys.model.SysMessageLogExample" resultMap="BOResultMap" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_message_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sys_message_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_message_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.cabbage.sys.model.SysMessageLogExample" >
    delete from sys_message_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="vc.thinker.cabbage.sys.model.SysMessageLog" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_message_log (id, content, image_text_id, 
      is_image_text, to_user_ids, send_time, 
      is_send_all, status, from_user_id, 
      is_platform, send_type)
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{imageTextId,jdbcType=BIGINT}, 
      #{isImageText,jdbcType=BIT}, #{toUserIds,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{isSendAll,jdbcType=BIT}, #{status,jdbcType=INTEGER}, #{fromUserId,jdbcType=BIGINT}, 
      #{isPlatform,jdbcType=BIT}, #{sendType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="vc.thinker.cabbage.sys.model.SysMessageLog" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_message_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="imageTextId != null" >
        image_text_id,
      </if>
      <if test="isImageText != null" >
        is_image_text,
      </if>
      <if test="toUserIds != null" >
        to_user_ids,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="isSendAll != null" >
        is_send_all,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="fromUserId != null" >
        from_user_id,
      </if>
      <if test="isPlatform != null" >
        is_platform,
      </if>
      <if test="sendType != null" >
        send_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="imageTextId != null" >
        #{imageTextId,jdbcType=BIGINT},
      </if>
      <if test="isImageText != null" >
        #{isImageText,jdbcType=BIT},
      </if>
      <if test="toUserIds != null" >
        #{toUserIds,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSendAll != null" >
        #{isSendAll,jdbcType=BIT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="fromUserId != null" >
        #{fromUserId,jdbcType=BIGINT},
      </if>
      <if test="isPlatform != null" >
        #{isPlatform,jdbcType=BIT},
      </if>
      <if test="sendType != null" >
        #{sendType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.cabbage.sys.model.SysMessageLogExample" resultType="java.lang.Integer" >
    select count(*) from sys_message_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_message_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.imageTextId != null" >
        image_text_id = #{record.imageTextId,jdbcType=BIGINT},
      </if>
      <if test="record.isImageText != null" >
        is_image_text = #{record.isImageText,jdbcType=BIT},
      </if>
      <if test="record.toUserIds != null" >
        to_user_ids = #{record.toUserIds,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null" >
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isSendAll != null" >
        is_send_all = #{record.isSendAll,jdbcType=BIT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.fromUserId != null" >
        from_user_id = #{record.fromUserId,jdbcType=BIGINT},
      </if>
      <if test="record.isPlatform != null" >
        is_platform = #{record.isPlatform,jdbcType=BIT},
      </if>
      <if test="record.sendType != null" >
        send_type = #{record.sendType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_message_log
    set id = #{record.id,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      image_text_id = #{record.imageTextId,jdbcType=BIGINT},
      is_image_text = #{record.isImageText,jdbcType=BIT},
      to_user_ids = #{record.toUserIds,jdbcType=VARCHAR},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      is_send_all = #{record.isSendAll,jdbcType=BIT},
      status = #{record.status,jdbcType=INTEGER},
      from_user_id = #{record.fromUserId,jdbcType=BIGINT},
      is_platform = #{record.isPlatform,jdbcType=BIT},
      send_type = #{record.sendType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.cabbage.sys.model.SysMessageLog" >
    update sys_message_log
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="imageTextId != null" >
        image_text_id = #{imageTextId,jdbcType=BIGINT},
      </if>
      <if test="isImageText != null" >
        is_image_text = #{isImageText,jdbcType=BIT},
      </if>
      <if test="toUserIds != null" >
        to_user_ids = #{toUserIds,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSendAll != null" >
        is_send_all = #{isSendAll,jdbcType=BIT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="fromUserId != null" >
        from_user_id = #{fromUserId,jdbcType=BIGINT},
      </if>
      <if test="isPlatform != null" >
        is_platform = #{isPlatform,jdbcType=BIT},
      </if>
      <if test="sendType != null" >
        send_type = #{sendType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.cabbage.sys.model.SysMessageLog" >
    update sys_message_log
    set content = #{content,jdbcType=VARCHAR},
      image_text_id = #{imageTextId,jdbcType=BIGINT},
      is_image_text = #{isImageText,jdbcType=BIT},
      to_user_ids = #{toUserIds,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      is_send_all = #{isSendAll,jdbcType=BIT},
      status = #{status,jdbcType=INTEGER},
      from_user_id = #{fromUserId,jdbcType=BIGINT},
      is_platform = #{isPlatform,jdbcType=BIT},
      send_type = #{sendType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>