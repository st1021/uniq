<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vc.thinker.cabbage.sys.mapper.InitImgMapper" >
  <resultMap id="BaseResultMap" type="vc.thinker.cabbage.sys.model.InitImg" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="init_img" property="initImg" jdbcType="VARCHAR" />
    <result column="link_url" property="linkUrl" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="img_type" property="imgType" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BOResultMap" type="vc.thinker.cabbage.sys.bo.InitImgBO" extends="BaseResultMap" />
  
  <select id="findPageByVo" resultMap="BOResultMap">
  		select * from sys_init_img where is_delete = 0
		<if test="null != vo.imgType">
			and img_type = #{vo.imgType}
		</if>
  </select>
  
  <select id="findNormalImg" resultMap="BOResultMap">
  		select init_img ,link_url from sys_init_img where is_delete = 0
		<if test="null != imgType">
			and img_type = #{imgType}
		</if>
  </select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, init_img, link_url, is_delete, create_time, update_time, img_type
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.cabbage.sys.model.InitImgExample" resultMap="BOResultMap" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_init_img
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sys_init_img
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_init_img
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.cabbage.sys.model.InitImgExample" >
    delete from sys_init_img
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="vc.thinker.cabbage.sys.model.InitImg" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_init_img (id, name, init_img, 
      link_url, is_delete, create_time, 
      update_time, img_type)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{initImg,jdbcType=VARCHAR}, 
      #{linkUrl,jdbcType=VARCHAR}, #{isDelete,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{imgType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="vc.thinker.cabbage.sys.model.InitImg" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_init_img
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="initImg != null" >
        init_img,
      </if>
      <if test="linkUrl != null" >
        link_url,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="imgType != null" >
        img_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="initImg != null" >
        #{initImg,jdbcType=VARCHAR},
      </if>
      <if test="linkUrl != null" >
        #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imgType != null" >
        #{imgType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.cabbage.sys.model.InitImgExample" resultType="java.lang.Integer" >
    select count(*) from sys_init_img
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_init_img
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.initImg != null" >
        init_img = #{record.initImg,jdbcType=VARCHAR},
      </if>
      <if test="record.linkUrl != null" >
        link_url = #{record.linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.imgType != null" >
        img_type = #{record.imgType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_init_img
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      init_img = #{record.initImg,jdbcType=VARCHAR},
      link_url = #{record.linkUrl,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      img_type = #{record.imgType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.cabbage.sys.model.InitImg" >
    update sys_init_img
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="initImg != null" >
        init_img = #{initImg,jdbcType=VARCHAR},
      </if>
      <if test="linkUrl != null" >
        link_url = #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imgType != null" >
        img_type = #{imgType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.cabbage.sys.model.InitImg" >
    update sys_init_img
    set name = #{name,jdbcType=VARCHAR},
      init_img = #{initImg,jdbcType=VARCHAR},
      link_url = #{linkUrl,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      img_type = #{imgType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>