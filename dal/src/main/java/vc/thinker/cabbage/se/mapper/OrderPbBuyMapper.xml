<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vc.thinker.cabbage.se.mapper.OrderPbBuyMapper">
  <resultMap id="BaseResultMap" type="vc.thinker.cabbage.se.model.OrderPbBuy">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="pb_id" jdbcType="BIGINT" property="pbId" />
    <result column="pb_code" jdbcType="VARCHAR" property="pbCode" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="cash_fee" jdbcType="DECIMAL" property="cashFee" />
    <result column="pb_amount" jdbcType="DECIMAL" property="pbAmount" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pay_order_code" jdbcType="VARCHAR" property="payOrderCode" />
    <result column="out_order_id" jdbcType="VARCHAR" property="outOrderId" />
    <result column="payment_mark" jdbcType="VARCHAR" property="paymentMark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BOResultMap" type="vc.thinker.cabbage.se.bo.OrderPbBuyBO" />
  
  <select id="findPageByVo" resultMap="BOResultMap">
  		select 
  			b.*,
  			m.nickname,m.mobile 
  		from 
  			se_order_pb_buy b left join user_member m on b.uid = m.uid
  		<where>
  			 <if test="null != vo.nickname and '' != vo.nickname">
  			 	and m.nickname like concat ('%',#{vo.nickname},'%')
  			 </if>
  			 <if test="null != vo.mobile and '' != vo.mobile">
  			 	and m.mobile like concat ('%',#{vo.mobile},'%')
  			 </if>
  			 <if test="null != vo.orderCode and '' != vo.orderCode">
  			 	and b.order_code like concat ('%',#{vo.orderCode},'%')
  			 </if>
  			 <if test="null != vo.beginDate and '' != vo.beginDate">
  			 	and DATE_FORMAT(b.create_time ,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{vo.beginDate} ,'%Y-%m-%d')
  			 </if>
  			 <if test="null != vo.endDate and '' != vo.endDate">
  			 	and DATE_FORMAT(b.create_time ,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{vo.beginDate} ,'%Y-%m-%d')
  			 </if>
  		</where>
  		order by b.create_time desc 
  </select>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, pb_id, pb_code, order_id, order_code, create_time, order_amount, cash_fee, 
    pb_amount, currency, status, pay_order_code, out_order_id, payment_mark
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.cabbage.se.model.OrderPbBuyExample" resultMap="BOResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from se_order_pb_buy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap">
    select 
    <include refid="Base_Column_List" />
    from se_order_pb_buy
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from se_order_pb_buy
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.cabbage.se.model.OrderPbBuyExample">
    delete from se_order_pb_buy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="vc.thinker.cabbage.se.model.OrderPbBuy" useGeneratedKeys="true">
    insert into se_order_pb_buy (id, uid, pb_id, pb_code, 
      order_id, order_code, create_time, 
      order_amount, cash_fee, pb_amount, 
      currency, status, pay_order_code, 
      out_order_id, payment_mark)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{pbId,jdbcType=BIGINT}, #{pbCode,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=BIGINT}, #{orderCode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{orderAmount,jdbcType=DECIMAL}, #{cashFee,jdbcType=DECIMAL}, #{pbAmount,jdbcType=DECIMAL}, 
      #{currency,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{payOrderCode,jdbcType=VARCHAR}, 
      #{outOrderId,jdbcType=VARCHAR}, #{paymentMark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="vc.thinker.cabbage.se.model.OrderPbBuy" useGeneratedKeys="true">
    insert into se_order_pb_buy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="pbId != null">
        pb_id,
      </if>
      <if test="pbCode != null">
        pb_code,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="cashFee != null">
        cash_fee,
      </if>
      <if test="pbAmount != null">
        pb_amount,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="payOrderCode != null">
        pay_order_code,
      </if>
      <if test="outOrderId != null">
        out_order_id,
      </if>
      <if test="paymentMark != null">
        payment_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="pbId != null">
        #{pbId,jdbcType=BIGINT},
      </if>
      <if test="pbCode != null">
        #{pbCode,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashFee != null">
        #{cashFee,jdbcType=DECIMAL},
      </if>
      <if test="pbAmount != null">
        #{pbAmount,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payOrderCode != null">
        #{payOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="outOrderId != null">
        #{outOrderId,jdbcType=VARCHAR},
      </if>
      <if test="paymentMark != null">
        #{paymentMark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.cabbage.se.model.OrderPbBuyExample" resultType="java.lang.Integer">
    select count(*) from se_order_pb_buy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update se_order_pb_buy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.pbId != null">
        pb_id = #{record.pbId,jdbcType=BIGINT},
      </if>
      <if test="record.pbCode != null">
        pb_code = #{record.pbCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderCode != null">
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.cashFee != null">
        cash_fee = #{record.cashFee,jdbcType=DECIMAL},
      </if>
      <if test="record.pbAmount != null">
        pb_amount = #{record.pbAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.payOrderCode != null">
        pay_order_code = #{record.payOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.outOrderId != null">
        out_order_id = #{record.outOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentMark != null">
        payment_mark = #{record.paymentMark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update se_order_pb_buy
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      pb_id = #{record.pbId,jdbcType=BIGINT},
      pb_code = #{record.pbCode,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=BIGINT},
      order_code = #{record.orderCode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      cash_fee = #{record.cashFee,jdbcType=DECIMAL},
      pb_amount = #{record.pbAmount,jdbcType=DECIMAL},
      currency = #{record.currency,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      pay_order_code = #{record.payOrderCode,jdbcType=VARCHAR},
      out_order_id = #{record.outOrderId,jdbcType=VARCHAR},
      payment_mark = #{record.paymentMark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.cabbage.se.model.OrderPbBuy">
    update se_order_pb_buy
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="pbId != null">
        pb_id = #{pbId,jdbcType=BIGINT},
      </if>
      <if test="pbCode != null">
        pb_code = #{pbCode,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashFee != null">
        cash_fee = #{cashFee,jdbcType=DECIMAL},
      </if>
      <if test="pbAmount != null">
        pb_amount = #{pbAmount,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payOrderCode != null">
        pay_order_code = #{payOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="outOrderId != null">
        out_order_id = #{outOrderId,jdbcType=VARCHAR},
      </if>
      <if test="paymentMark != null">
        payment_mark = #{paymentMark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.cabbage.se.model.OrderPbBuy">
    update se_order_pb_buy
    set uid = #{uid,jdbcType=BIGINT},
      pb_id = #{pbId,jdbcType=BIGINT},
      pb_code = #{pbCode,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      order_code = #{orderCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      cash_fee = #{cashFee,jdbcType=DECIMAL},
      pb_amount = #{pbAmount,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      pay_order_code = #{payOrderCode,jdbcType=VARCHAR},
      out_order_id = #{outOrderId,jdbcType=VARCHAR},
      payment_mark = #{paymentMark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>