<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vc.thinker.cabbage.user.mapper.UserCouponMapper">
  <resultMap id="BaseResultMap" type="vc.thinker.cabbage.user.model.UserCoupon">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="coupon_id" jdbcType="BIGINT" property="couponId" />
    <result column="expire_date" jdbcType="TIMESTAMP" property="expireDate" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="city_id" jdbcType="VARCHAR" property="cityId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BOResultMap" type="vc.thinker.cabbage.user.bo.UserCouponBO" />
  
  <select id="findCouponList" resultMap="BOResultMap">
		SELECT 
			s.*, m.nickname,m.mobile  
		from 
			user_coupon s left join user_member m on s.uid = m.uid
		<where>
			<if test="vo.nickname != null and vo.nickname != ''">
				and m.nickname like '%' #{vo.nickname} '%'
			</if>
			<if test="vo.mobile != null and vo.mobile != ''">
				and m.mobile like '%' #{vo.mobile} '%'
			</if>
			<if test="vo.status != null">
				and s.status = #{vo.status}
			</if>
			<if test="vo.startTime != null and vo.startTime != ''">
				and s.create_time <![CDATA[ >= ]]> #{vo.startTime}
			</if>
			<if test="vo.endTime != null and vo.endTime != ''">
				and s.create_time <![CDATA[ <= ]]> #{vo.endTime}
			</if>
		</where>
		
		order by s.create_time desc 
	</select>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, coupon_id, expire_date, amount, city_id, status, source, pid, create_time, 
    currency
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.cabbage.user.model.UserCouponExample" resultMap="BOResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_coupon
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_coupon
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.cabbage.user.model.UserCouponExample">
    delete from user_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="vc.thinker.cabbage.user.model.UserCoupon" useGeneratedKeys="true">
    insert into user_coupon (id, uid, coupon_id, 
      expire_date, amount, city_id, 
      status, source, pid, 
      create_time, currency)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{couponId,jdbcType=BIGINT}, 
      #{expireDate,jdbcType=TIMESTAMP}, #{amount,jdbcType=DECIMAL}, #{cityId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{source,jdbcType=VARCHAR}, #{pid,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{currency,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="vc.thinker.cabbage.user.model.UserCoupon" useGeneratedKeys="true">
    insert into user_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="expireDate != null">
        expire_date,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="currency != null">
        currency,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="expireDate != null">
        #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.cabbage.user.model.UserCouponExample" resultType="java.lang.Integer">
    select count(*) from user_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_coupon
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.couponId != null">
        coupon_id = #{record.couponId,jdbcType=BIGINT},
      </if>
      <if test="record.expireDate != null">
        expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_coupon
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      coupon_id = #{record.couponId,jdbcType=BIGINT},
      expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      amount = #{record.amount,jdbcType=DECIMAL},
      city_id = #{record.cityId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      source = #{record.source,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      currency = #{record.currency,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.cabbage.user.model.UserCoupon">
    update user_coupon
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=BIGINT},
      </if>
      <if test="expireDate != null">
        expire_date = #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.cabbage.user.model.UserCoupon">
    update user_coupon
    set uid = #{uid,jdbcType=BIGINT},
      coupon_id = #{couponId,jdbcType=BIGINT},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      city_id = #{cityId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      currency = #{currency,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>