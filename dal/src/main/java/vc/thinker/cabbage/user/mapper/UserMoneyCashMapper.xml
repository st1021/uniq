<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vc.thinker.cabbage.user.mapper.UserMoneyCashMapper">
  <resultMap id="BaseResultMap" type="vc.thinker.cabbage.user.model.UserMoneyCash">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cash_sn" jdbcType="VARCHAR" property="cashSn" />
    <result column="cash_user_id" jdbcType="BIGINT" property="cashUserId" />
    <result column="cash_user_type" jdbcType="CHAR" property="cashUserType" />
    <result column="cash_amount" jdbcType="DECIMAL" property="cashAmount" />
    <result column="cash_user_name" jdbcType="VARCHAR" property="cashUserName" />
    <result column="cash_account" jdbcType="VARCHAR" property="cashAccount" />
    <result column="cash_status" jdbcType="CHAR" property="cashStatus" />
    <result column="cash_bank" jdbcType="VARCHAR" property="cashBank" />
    <result column="cash_info" jdbcType="VARCHAR" property="cashInfo" />
    <result column="cash_payment_type" jdbcType="VARCHAR" property="cashPaymentType" />
    <result column="cash_admin_id" jdbcType="BIGINT" property="cashAdminId" />
    <result column="cash_admin_info" jdbcType="VARCHAR" property="cashAdminInfo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="trans_time" jdbcType="TIMESTAMP" property="transTime" />
    <result column="partner_trade_no" jdbcType="VARCHAR" property="partnerTradeNo" />
    <result column="payment_no" jdbcType="VARCHAR" property="paymentNo" />
    <result column="cmms_amt" jdbcType="INTEGER" property="cmmsAmt" />
    <result column="trans_uid" jdbcType="BIGINT" property="transUid" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BOResultMap" type="vc.thinker.cabbage.user.bo.UserMoneyCashBO" />
  
  <select id="findPageByAgent" resultMap="BOResultMap">
  		select 
  			c.*,a.agent_name agentName,a.mobile contactMobile ,a.country
  		from 
  			user_money_cash c INNER JOIN user_agent a on c.cash_user_id = a.uid 
  		where
  			c.is_deleted = 0
  			and c.cash_user_type = 3
  			<if test="null != vo.cashStatus and '' != vo.cashStatus">
  				and c.cash_status = #{vo.cashStatus}
  			</if>
  			<if test="vo.userName != null and vo.userName != ''">
	    		AND c.cash_user_name like CONCAT('%', #{vo.userName}, '%')
	    	</if>
	    	<if test="null != vo.email and '' != vo.email">
	    		AND a.email like CONCAT('%', #{vo.email}, '%')
	    	</if>
	    	<if test="null != vo.agentName and '' != vo.agentName">
	    		and a.agent_name like CONCAT('%', #{vo.agentName}, '%') 
	    	</if>
	    	<if test="null != vo.contactMobile and '' != vo.contactMobile">
	    		and a.mobile like CONCAT('%', #{vo.contactMobile}, '%') 
	    	</if>
	    	<if test="vo.startTime != null and vo.startTime != ''">
	    		AND DATE_FORMAT(c.create_time ,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{vo.startTime} ,'%Y-%m-%d')
	    	</if>
	    	<if test="vo.endTime != null and vo.endTime != ''">
	    		AND DATE_FORMAT(c.create_time ,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{vo.endTime} ,'%Y-%m-%d')
	    	</if>
	    	order by c.create_time desc 
  </select>
  	
  <select id="findPageByReferee" resultMap="BOResultMap">
  		select 
  			c.*,r.referee_name refereeName ,r.mobile contactMobile,r.country
  		from 
  			user_money_cash c INNER JOIN user_referee r on c.cash_user_id = r.uid 
  		where 
  			c.is_deleted = 0
  			and c.cash_user_type = 2
  			<if test="null != vo.cashStatus and '' != vo.cashStatus">
  				and c.cash_status = #{vo.cashStatus}
  			</if>
  			<if test="vo.userName != null and vo.userName != ''">
	    		AND c.cash_user_name like CONCAT('%', #{vo.userName}, '%')
	    	</if>
	    	<if test="null != vo.refereeName and '' != vo.refereeName">
	    		and r.referee_name like CONCAT('%', #{vo.refereeName}, '%')
	    	</if>
	    	<if test="null != vo.contactMobile and '' != vo.contactMobile">
	    		and r.mobile like CONCAT('%', #{vo.contactMobile}, '%')
	    	</if>
	    	<if test="vo.startTime != null and vo.startTime != ''">
	    		AND DATE_FORMAT(c.create_time ,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{vo.startTime} ,'%Y-%m-%d')
	    	</if>
	    	<if test="vo.endTime != null and vo.endTime != ''">
	    		AND DATE_FORMAT(c.create_time ,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{vo.endTime} ,'%Y-%m-%d')
	    	</if>
	    	order by c.create_time desc 
  </select>
  
  <select id="findPageBySeller" resultMap="BOResultMap">
  		
  		select 
  			c.*,s.seller_name sellerName,s.contact_mobile contactMobile,s.country
  		from 
  			user_money_cash c 
  			INNER JOIN user_seller s on c.cash_user_id = s.uid 
  		where 
  			c.is_deleted = 0
  			and c.cash_user_type = 1
  			<if test="null != vo.cashStatus and '' != vo.cashStatus">
  				and c.cash_status = #{vo.cashStatus}
  			</if>
  			<if test="vo.userName != null and vo.userName != ''">
	    		AND c.cash_user_name like CONCAT('%', #{vo.userName}, '%')
	    	</if>
	    	<if test="null != vo.email and '' != vo.email">
	    		AND s.email like CONCAT('%', #{vo.email}, '%')
	    	</if>
  			<if test="null != vo.sellerName and '' != vo.sellerName">
  				AND s.seller_name like CONCAT('%', #{vo.sellerName}, '%') 
  			</if>
  			<if test="null != vo.contactMobile and '' != vo.contactMobile">
	    		and s.contact_mobile like CONCAT('%', #{vo.contactMobile}, '%') 
	    	</if>
	    	<if test="vo.startTime != null and vo.startTime != ''">
	    		AND DATE_FORMAT(c.create_time ,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{vo.startTime} ,'%Y-%m-%d')
	    	</if>
	    	<if test="vo.endTime != null and vo.endTime != ''">
	    		AND DATE_FORMAT(c.create_time ,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{vo.endTime} ,'%Y-%m-%d')
	    	</if>
	    	
  		order by c.create_time desc 
	     
  </select>
  
  <select id="findDetailOne" resultMap="BOResultMap">
  		SELECT 
			m.* ,c.name checkName,t.name transName,s.seller_name sellerName	,ua.login_name loginName
		from 
			user_money_cash m 
			left join user_admin c on m.cash_admin_id = c.uid 
			left join user_admin t on m.trans_uid = t.uid
			left join user_seller s on m.cash_user_id = s.uid
			left join sys_user_account ua on m.cash_user_id = ua.uid 
		where 
			m.id = #{id,jdbcType=BIGINT}
			
  </select>
  
   <select id="findPageByVO" resultMap="BOResultMap">
    	select 
    		c.*,
    		s.seller_name sellerName,s.contact_mobile contactMobile,s.country,
    		u.login_name loginName
    	from 
    		user_money_cash c 
    		left join user_seller s on c.cash_user_id = s.uid
    		left join sys_user_account u on c.cash_user_id = u.uid 
    	where 
    		c.is_deleted = 0 and u.account_type = 9
    		<if test="vo.cashStatus != null and vo.cashStatus != ''">
	    		AND c.cash_status = #{vo.cashStatus}
	    	</if>
	    	<if test="vo.loginName != null and vo.loginName != ''">
	    		AND u.login_name like CONCAT('%', #{vo.loginName}, '%')
	    	</if>
	    	<if test="vo.sellerName != null and vo.sellerName != ''">
	    		AND s.seller_name like CONCAT('%', #{vo.sellerName}, '%')
	    	</if>
	    	<if test="vo.userName != null and vo.userName != ''">
	    		AND c.cash_user_name like CONCAT('%', #{vo.userName}, '%')
	    	</if>
	    	<if test="vo.startTime != null and vo.startTime != ''">
	    		AND DATE_FORMAT(c.create_time ,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{vo.startTime} ,'%Y-%m-%d')
	    	</if>
	    	<if test="vo.endTime != null and vo.endTime != ''">
	    		AND DATE_FORMAT(c.create_time ,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{vo.endTime} ,'%Y-%m-%d')
	    	</if>
	    	<if test="vo.gtTime != null">
	    		AND c.create_time <![CDATA[ > ]]> #{vo.gtTime}
	    	</if>
	    	<if test="vo.ltTime != null">
	    		AND c.create_time <![CDATA[ < ]]> #{vo.ltTime}
	    	</if>
	    	<if test="vo.userId != null">
	    		AND c.cash_user_id = #{vo.userId}
	    	</if>
	    	<if test="null != vo.contactMobile and '' != vo.contactMobile">
	    		and s.contact_mobile like CONCAT('%', #{vo.contactMobile}, '%') 
	    	</if>
    	order by c.create_time desc
    	
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cash_sn, cash_user_id, cash_user_type, cash_amount, cash_user_name, cash_account, 
    cash_status, cash_bank, cash_info, cash_payment_type, cash_admin_id, cash_admin_info, 
    create_time, is_deleted, check_time, trans_time, partner_trade_no, payment_no, cmms_amt, 
    trans_uid, currency
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.cabbage.user.model.UserMoneyCashExample" resultMap="BOResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_money_cash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_money_cash
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_money_cash
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.cabbage.user.model.UserMoneyCashExample">
    delete from user_money_cash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="vc.thinker.cabbage.user.model.UserMoneyCash" useGeneratedKeys="true">
    insert into user_money_cash (id, cash_sn, cash_user_id, 
      cash_user_type, cash_amount, cash_user_name, 
      cash_account, cash_status, cash_bank, 
      cash_info, cash_payment_type, cash_admin_id, 
      cash_admin_info, create_time, is_deleted, 
      check_time, trans_time, partner_trade_no, 
      payment_no, cmms_amt, trans_uid, 
      currency)
    values (#{id,jdbcType=BIGINT}, #{cashSn,jdbcType=VARCHAR}, #{cashUserId,jdbcType=BIGINT}, 
      #{cashUserType,jdbcType=CHAR}, #{cashAmount,jdbcType=DECIMAL}, #{cashUserName,jdbcType=VARCHAR}, 
      #{cashAccount,jdbcType=VARCHAR}, #{cashStatus,jdbcType=CHAR}, #{cashBank,jdbcType=VARCHAR}, 
      #{cashInfo,jdbcType=VARCHAR}, #{cashPaymentType,jdbcType=VARCHAR}, #{cashAdminId,jdbcType=BIGINT}, 
      #{cashAdminInfo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, 
      #{checkTime,jdbcType=TIMESTAMP}, #{transTime,jdbcType=TIMESTAMP}, #{partnerTradeNo,jdbcType=VARCHAR}, 
      #{paymentNo,jdbcType=VARCHAR}, #{cmmsAmt,jdbcType=INTEGER}, #{transUid,jdbcType=BIGINT}, 
      #{currency,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="vc.thinker.cabbage.user.model.UserMoneyCash" useGeneratedKeys="true">
    insert into user_money_cash
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cashSn != null">
        cash_sn,
      </if>
      <if test="cashUserId != null">
        cash_user_id,
      </if>
      <if test="cashUserType != null">
        cash_user_type,
      </if>
      <if test="cashAmount != null">
        cash_amount,
      </if>
      <if test="cashUserName != null">
        cash_user_name,
      </if>
      <if test="cashAccount != null">
        cash_account,
      </if>
      <if test="cashStatus != null">
        cash_status,
      </if>
      <if test="cashBank != null">
        cash_bank,
      </if>
      <if test="cashInfo != null">
        cash_info,
      </if>
      <if test="cashPaymentType != null">
        cash_payment_type,
      </if>
      <if test="cashAdminId != null">
        cash_admin_id,
      </if>
      <if test="cashAdminInfo != null">
        cash_admin_info,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="transTime != null">
        trans_time,
      </if>
      <if test="partnerTradeNo != null">
        partner_trade_no,
      </if>
      <if test="paymentNo != null">
        payment_no,
      </if>
      <if test="cmmsAmt != null">
        cmms_amt,
      </if>
      <if test="transUid != null">
        trans_uid,
      </if>
      <if test="currency != null">
        currency,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cashSn != null">
        #{cashSn,jdbcType=VARCHAR},
      </if>
      <if test="cashUserId != null">
        #{cashUserId,jdbcType=BIGINT},
      </if>
      <if test="cashUserType != null">
        #{cashUserType,jdbcType=CHAR},
      </if>
      <if test="cashAmount != null">
        #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashUserName != null">
        #{cashUserName,jdbcType=VARCHAR},
      </if>
      <if test="cashAccount != null">
        #{cashAccount,jdbcType=VARCHAR},
      </if>
      <if test="cashStatus != null">
        #{cashStatus,jdbcType=CHAR},
      </if>
      <if test="cashBank != null">
        #{cashBank,jdbcType=VARCHAR},
      </if>
      <if test="cashInfo != null">
        #{cashInfo,jdbcType=VARCHAR},
      </if>
      <if test="cashPaymentType != null">
        #{cashPaymentType,jdbcType=VARCHAR},
      </if>
      <if test="cashAdminId != null">
        #{cashAdminId,jdbcType=BIGINT},
      </if>
      <if test="cashAdminInfo != null">
        #{cashAdminInfo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transTime != null">
        #{transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="partnerTradeNo != null">
        #{partnerTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentNo != null">
        #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="cmmsAmt != null">
        #{cmmsAmt,jdbcType=INTEGER},
      </if>
      <if test="transUid != null">
        #{transUid,jdbcType=BIGINT},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.cabbage.user.model.UserMoneyCashExample" resultType="java.lang.Integer">
    select count(*) from user_money_cash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_money_cash
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cashSn != null">
        cash_sn = #{record.cashSn,jdbcType=VARCHAR},
      </if>
      <if test="record.cashUserId != null">
        cash_user_id = #{record.cashUserId,jdbcType=BIGINT},
      </if>
      <if test="record.cashUserType != null">
        cash_user_type = #{record.cashUserType,jdbcType=CHAR},
      </if>
      <if test="record.cashAmount != null">
        cash_amount = #{record.cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.cashUserName != null">
        cash_user_name = #{record.cashUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.cashAccount != null">
        cash_account = #{record.cashAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.cashStatus != null">
        cash_status = #{record.cashStatus,jdbcType=CHAR},
      </if>
      <if test="record.cashBank != null">
        cash_bank = #{record.cashBank,jdbcType=VARCHAR},
      </if>
      <if test="record.cashInfo != null">
        cash_info = #{record.cashInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.cashPaymentType != null">
        cash_payment_type = #{record.cashPaymentType,jdbcType=VARCHAR},
      </if>
      <if test="record.cashAdminId != null">
        cash_admin_id = #{record.cashAdminId,jdbcType=BIGINT},
      </if>
      <if test="record.cashAdminInfo != null">
        cash_admin_info = #{record.cashAdminInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transTime != null">
        trans_time = #{record.transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.partnerTradeNo != null">
        partner_trade_no = #{record.partnerTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentNo != null">
        payment_no = #{record.paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cmmsAmt != null">
        cmms_amt = #{record.cmmsAmt,jdbcType=INTEGER},
      </if>
      <if test="record.transUid != null">
        trans_uid = #{record.transUid,jdbcType=BIGINT},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_money_cash
    set id = #{record.id,jdbcType=BIGINT},
      cash_sn = #{record.cashSn,jdbcType=VARCHAR},
      cash_user_id = #{record.cashUserId,jdbcType=BIGINT},
      cash_user_type = #{record.cashUserType,jdbcType=CHAR},
      cash_amount = #{record.cashAmount,jdbcType=DECIMAL},
      cash_user_name = #{record.cashUserName,jdbcType=VARCHAR},
      cash_account = #{record.cashAccount,jdbcType=VARCHAR},
      cash_status = #{record.cashStatus,jdbcType=CHAR},
      cash_bank = #{record.cashBank,jdbcType=VARCHAR},
      cash_info = #{record.cashInfo,jdbcType=VARCHAR},
      cash_payment_type = #{record.cashPaymentType,jdbcType=VARCHAR},
      cash_admin_id = #{record.cashAdminId,jdbcType=BIGINT},
      cash_admin_info = #{record.cashAdminInfo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      trans_time = #{record.transTime,jdbcType=TIMESTAMP},
      partner_trade_no = #{record.partnerTradeNo,jdbcType=VARCHAR},
      payment_no = #{record.paymentNo,jdbcType=VARCHAR},
      cmms_amt = #{record.cmmsAmt,jdbcType=INTEGER},
      trans_uid = #{record.transUid,jdbcType=BIGINT},
      currency = #{record.currency,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.cabbage.user.model.UserMoneyCash">
    update user_money_cash
    <set>
      <if test="cashSn != null">
        cash_sn = #{cashSn,jdbcType=VARCHAR},
      </if>
      <if test="cashUserId != null">
        cash_user_id = #{cashUserId,jdbcType=BIGINT},
      </if>
      <if test="cashUserType != null">
        cash_user_type = #{cashUserType,jdbcType=CHAR},
      </if>
      <if test="cashAmount != null">
        cash_amount = #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashUserName != null">
        cash_user_name = #{cashUserName,jdbcType=VARCHAR},
      </if>
      <if test="cashAccount != null">
        cash_account = #{cashAccount,jdbcType=VARCHAR},
      </if>
      <if test="cashStatus != null">
        cash_status = #{cashStatus,jdbcType=CHAR},
      </if>
      <if test="cashBank != null">
        cash_bank = #{cashBank,jdbcType=VARCHAR},
      </if>
      <if test="cashInfo != null">
        cash_info = #{cashInfo,jdbcType=VARCHAR},
      </if>
      <if test="cashPaymentType != null">
        cash_payment_type = #{cashPaymentType,jdbcType=VARCHAR},
      </if>
      <if test="cashAdminId != null">
        cash_admin_id = #{cashAdminId,jdbcType=BIGINT},
      </if>
      <if test="cashAdminInfo != null">
        cash_admin_info = #{cashAdminInfo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transTime != null">
        trans_time = #{transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="partnerTradeNo != null">
        partner_trade_no = #{partnerTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentNo != null">
        payment_no = #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="cmmsAmt != null">
        cmms_amt = #{cmmsAmt,jdbcType=INTEGER},
      </if>
      <if test="transUid != null">
        trans_uid = #{transUid,jdbcType=BIGINT},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.cabbage.user.model.UserMoneyCash">
    update user_money_cash
    set cash_sn = #{cashSn,jdbcType=VARCHAR},
      cash_user_id = #{cashUserId,jdbcType=BIGINT},
      cash_user_type = #{cashUserType,jdbcType=CHAR},
      cash_amount = #{cashAmount,jdbcType=DECIMAL},
      cash_user_name = #{cashUserName,jdbcType=VARCHAR},
      cash_account = #{cashAccount,jdbcType=VARCHAR},
      cash_status = #{cashStatus,jdbcType=CHAR},
      cash_bank = #{cashBank,jdbcType=VARCHAR},
      cash_info = #{cashInfo,jdbcType=VARCHAR},
      cash_payment_type = #{cashPaymentType,jdbcType=VARCHAR},
      cash_admin_id = #{cashAdminId,jdbcType=BIGINT},
      cash_admin_info = #{cashAdminInfo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      trans_time = #{transTime,jdbcType=TIMESTAMP},
      partner_trade_no = #{partnerTradeNo,jdbcType=VARCHAR},
      payment_no = #{paymentNo,jdbcType=VARCHAR},
      cmms_amt = #{cmmsAmt,jdbcType=INTEGER},
      trans_uid = #{transUid,jdbcType=BIGINT},
      currency = #{currency,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>