<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vc.thinker.cabbage.user.mapper.MemberMapper">
	<resultMap id="BaseResultMap" type="vc.thinker.cabbage.user.model.Member">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="height" jdbcType="INTEGER" property="height" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="birthdate" jdbcType="DATE" property="birthdate" />
    <result column="head_img_path" jdbcType="VARCHAR" property="headImgPath" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="pay_open_id" jdbcType="VARCHAR" property="payOpenId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="invite_code" jdbcType="VARCHAR" property="inviteCode" />
    <result column="auth_status" jdbcType="CHAR" property="authStatus" />
    <result column="ride_distance" jdbcType="DOUBLE" property="rideDistance" />
    <result column="ride_time" jdbcType="BIGINT" property="rideTime" />
    <result column="deposit" jdbcType="DECIMAL" property="deposit" />
    <result column="auth_step" jdbcType="INTEGER" property="authStep" />
    <result column="invited_invite_code" jdbcType="VARCHAR" property="invitedInviteCode" />
    <result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
    <result column="regist_channel" jdbcType="VARCHAR" property="registChannel" />
    <result column="vip_expires_in" jdbcType="TIMESTAMP" property="vipExpiresIn" />
    <result column="vip_discount" jdbcType="DOUBLE" property="vipDiscount" />
    <result column="client_source" jdbcType="VARCHAR" property="clientSource" />
    <result column="registered_ip" jdbcType="VARCHAR" property="registeredIp" />
    <result column="auth_apply_remark" jdbcType="VARCHAR" property="authApplyRemark" />
    <result column="credentials_images" jdbcType="VARCHAR" property="credentialsImages" />
    <result column="school_name" jdbcType="VARCHAR" property="schoolName" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="auth_apply_status" jdbcType="INTEGER" property="authApplyStatus" />
    <result column="motor_power" jdbcType="INTEGER" property="motorPower" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="stripe_customer_id" jdbcType="VARCHAR" property="stripeCustomerId" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="reward_amount" jdbcType="BIGINT" property="rewardAmount" />
    <result column="sys_code" jdbcType="VARCHAR" property="sysCode" />
    <result column="is_pay_basic_cost" jdbcType="BIT" property="isPayBasicCost" />
    <result column="rectoken" jdbcType="VARCHAR" property="rectoken" />
    <result column="rectoken_lifetime" jdbcType="TIMESTAMP" property="rectokenLifetime" />
  </resultMap>
	<resultMap extends="BaseResultMap" id="BOResultMap" type="vc.thinker.cabbage.user.bo.MemberBO" />
	<resultMap id="CountStatsMap" type="vc.thinker.cabbage.stats.bo.CountStatsBO" />
	<sql id="Base_Column_List">
    uid, name, nickname, sex, height, weight, birthdate, head_img_path, email, mobile, 
    status, create_by, create_time, update_by, update_time, is_deleted, id_card, pay_open_id, 
    remark, invite_code, auth_status, ride_distance, ride_time, deposit, auth_step, invited_invite_code, 
    job_number, regist_channel, vip_expires_in, vip_discount, client_source, registered_ip, 
    auth_apply_remark, credentials_images, school_name, student_id, auth_apply_status, 
    motor_power, country, stripe_customer_id, currency, reward_amount, sys_code, is_pay_basic_cost, 
    rectoken, rectoken_lifetime
  </sql>
  	<!-- HTH -->
  	<select id="findListByMemberVO" resultMap="BOResultMap">
  		SELECT m.*
		from user_member as m
			inner JOIN se_cabinet as c on(m.sys_code=c.sys_code)
			left join user_seller as s on(s.uid=c.seller_id)
		<where>
			<if test="null != vo.isVIP and vo.isVIP">
				and m.vip_expires_in is not null and vip_expires_in  <![CDATA[ >= ]]> SYSDATE() 
			</if>
			<if test="null != vo.isVIP and !vo.isVIP">
				and (m.vip_expires_in is null or vip_expires_in <![CDATA[ <= ]]> SYSDATE() )
			</if>
			<if test="vo.nickname != null and vo.nickname != ''">
				AND m.nickname like concat('%', #{vo.nickname}, '%')
			</if>
			<if test="vo.name != null and vo.name != ''">
				AND m.name like concat('%', #{vo.name}, '%')
			</if>
			<if test="vo.mobile != null and vo.mobile != ''">
				AND m.mobile like concat('%', #{vo.mobile}, '%')
			</if>
			<if test="vo.status != null and vo.status != ''">
				and m.status = #{vo.status}
			</if>
			<if test="vo.uid != null and vo.uid != ''">
				and m.uid = #{vo.uid}
			</if>
			<if test="vo.authStep != null and vo.authStep != ''">
				and m.auth_step = #{vo.authStep}
			</if>
			<if test="null != vo.country and '' != vo.country">
				and m.country = #{vo.country}
			</if>
			<if test="null != vo.currency and '' != vo.currency">
				and m.currency = #{vo.currency}
			</if>
			<if test="null != vo.sysCode and '' != vo.sysCode">
				and m.sys_code like concat ('%',#{vo.sysCode},'%')
			</if>
			<if test="null != vo.isPayBasicCost and vo.isPayBasicCost">
				and m.is_pay_basic_cost = 1
			</if>
			<if test="null != vo.isPayBasicCost and !vo.isPayBasicCost">
				and m.is_pay_basic_cost = 0
			</if>
			<if test="vo.sellerId !=null">
				and c.seller_id=#{vo.sellerId}
			</if>
			<if test="vo.agentId !=null">
				and c.agent_id=#{vo.agentId}
			</if>
			<if test="vo.refereeId !=null">
				and s.referee_uid=#{vo.refereeId}
			</if>
		</where>
		order by m.create_time desc
  	</select>
  	<select id="findActiveUserStats" resultMap="CountStatsMap">
		SELECT
		<if test="vo.statsType!=null and vo.statsType==&quot;1&quot; ">
			DATE_FORMAT(t.create_time, '%m') AS statsTime,
		</if>
		<if test="vo.statsType!=null and vo.statsType==&quot;2&quot; ">
			DATE_FORMAT(t.create_time, '%d') AS statsTime,
		</if>
		count(DISTINCT u.uid) AS userNums
		FROM
		user_member u
		inner JOIN se_order t on t.uid = u.uid
		WHERE 1=1
		and t.status &gt; 20
		<if test="vo.statsType!=null and vo.statsType==&quot;1&quot; ">
			and DATE_FORMAT(t.create_time, '%Y') = #{vo.time}
		</if>
		<if test="vo.statsType!=null and vo.statsType==&quot;2&quot; ">
			and DATE_FORMAT(t.create_time, '%Y-%m') = #{vo.time}
		</if>
		GROUP BY
		statsTime
		ORDER BY
		statsTime
	</select>
	
  	<select id="countActiveMembers" resultType="java.lang.Integer">
		select count(DISTINCT u.uid) from user_member u
		INNER JOIN se_order t ON t.uid=u.uid
		where 1=1
		and t.status &gt; 20
		<if test="day!=null and day!=''">
			and DATE_FORMAT(t.begin_time, '%Y-%m-%d') = #{day}
		</if>
	</select>
	
  	<select id="findCheckListByPageAndVo" resultMap="BOResultMap">
  			select * from user_member 
  			<where>
  				<if test="vo.nickname != null and '' != vo.nickname">
					nickname like CONCAT("%",#{vo.nickname},"%")
				</if>
				<if test="vo.mobile != null and '' != vo.mobile">
					and mobile like CONCAT("%",#{vo.mobile},"%")
				</if>
				<if test="vo.name != null and '' != vo.name">
					and name like CONCAT("%",#{vo.name},"%")
				</if>
				<if test="vo.authApplyStatus != null and '' != vo.authApplyStatus">
					and auth_apply_status = ${vo.authApplyStatus}
				</if>
				<if test="vo.authApplyStatus == null or '' == vo.authApplyStatus">
					and auth_apply_status is not null
				</if>
			</where> 
  			order by create_time desc 
  	</select>
  	
  	<select id="findByUids" resultMap="BOResultMap">
  		select * from user_member 
  		where uid in 
  		<foreach close=")" collection="uidList" item="item" open="(" separator=",">
          #{item}
      </foreach>
  	</select>
  	
  	<select id="findAllVipOrNotVip" resultMap="BOResultMap">
  		select 
  			uid,mobile,nickname,name,head_img_path
  		from 
  			user_member 
  		<where>
		<if test="null != isVip and isVip">
			and vip_expires_in is not null and vip_expires_in <![CDATA[ >= ]]> SYSDATE() 
		</if>
		<if test="null != isVip and !isVip">
			and  (vip_expires_in is null or vip_expires_in <![CDATA[ <= ]]>  SYSDATE() )
		</if>
  		</where>
  	</select>
  	
  	<select id="findAllOnlyUid" resultMap="BOResultMap">
  		select uid,mobile,nickname,name from user_member
  	</select>
  	
	<select id="findId" resultMap="BOResultMap">
		select 
		<include refid="Base_Column_List" /> 
		from user_member
		where uid=#{uid}
	</select>
	<update id="incrDepositby">
		update user_member set deposit = deposit + #{deposit} where uid = #{uid}
	</update>

	<update id="incrRideDistanceby">
		update user_member set ride_distance= ride_distance+ #{rideDistance} where
		uid = #{uid}
	</update>

	<update id="incrRideTimeby">
		update user_member set ride_time= ride_time+ #{rideTime} where uid = #{uid}
	</update>

	<select id="findHaveNicknameAndMobile" resultMap="BOResultMap">
		select
			u.* ,
			m.available_balance availableBalance,m.rebate_money rebateMoney
		from 
			user_member u left join user_money m on u.uid = m.uid 
		<where>
			<if test="null != vo.isVIP and vo.isVIP">
				and u.vip_expires_in is not null and vip_expires_in  <![CDATA[ >= ]]> SYSDATE() 
			</if>
			<if test="null != vo.isVIP and !vo.isVIP">
				and (u.vip_expires_in is null or vip_expires_in <![CDATA[ <= ]]> SYSDATE() )
			</if>
			<if test="vo.nickname != null and vo.nickname != ''">
				AND u.nickname like concat('%', #{vo.nickname}, '%')
			</if>
			<if test="vo.name != null and vo.name != ''">
				AND u.name like concat('%', #{vo.name}, '%')
			</if>
			<if test="vo.mobile != null and vo.mobile != ''">
				AND u.mobile like concat('%', #{vo.mobile}, '%')
			</if>
			<if test="vo.status != null and vo.status != ''">
				and u.status = #{vo.status}
			</if>
			<if test="vo.uid != null and vo.uid != ''">
				and u.uid = #{vo.uid}
			</if>
			<if test="vo.authStep != null and vo.authStep != ''">
				and u.auth_step = #{vo.authStep}
			</if>
			<if test="null != vo.country and '' != vo.country">
				and u.country = #{vo.country}
			</if>
			<if test="null != vo.currency and '' != vo.currency">
				and u.currency = #{vo.currency}
			</if>
			<if test="null != vo.sysCode and '' != vo.sysCode">
				and u.sys_code like concat ('%',#{vo.sysCode},'%')
			</if>
			<if test="null != vo.isPayBasicCost and vo.isPayBasicCost">
				and u.is_pay_basic_cost = 1
			</if>
			<if test="null != vo.isPayBasicCost and !vo.isPayBasicCost">
				and u.is_pay_basic_cost = 0
			</if>
			
		</where>
		order by u.create_time desc

	</select>

	<select id="findByPage" resultMap="BOResultMap">
		select
		<include refid="Base_Column_List" />
		from
		user_member
		<where>
			<if test="vo.uid != null and vo.uid != ''">
				and uid = #{vo.uid}
			</if>
			<if test="vo.status != null and vo.status != ''">
				and status = #{vo.status}
			</if>
			<if test="vo.nickname != null and vo.nickname != ''">
				AND nickname like concat('', #{vo.nickname}, '%')
			</if>
			<if test="vo.mobile != null and vo.mobile != ''">
				AND mobile like concat('', #{vo.mobile}, '%')
			</if>
		</where>
		order by create_time desc

	</select>
	<select id="findByCreateTime" resultMap="BOResultMap">
  		SELECT
			*
		FROM
			user_member 
  		where 1=1
  			<if test="beginDate != null and beginDate != ''">
	    		and DATE_FORMAT(create_time ,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{beginDate} ,'%Y-%m-%d')
	    	</if>
	    	<if test="endDate != null and endDate != ''">
	    		and DATE_FORMAT(create_time ,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate} ,'%Y-%m-%d')
	    	</if>
  	</select>
	<update id="updateUid">
		update user_member set uid=#{newUid} where uid=#{oldUid}
	</update>
	<select id="findMemberPageByVO" parameterType="vc.thinker.cabbage.user.vo.MemberVO" resultMap="BOResultMap">
		SELECT m.*,
		a.login_name loginName
		FROM user_member m
		INNER JOIN sys_user_account a ON m.uid = a.uid
		WHERE m.is_deleted = 0 AND a.account_type = 2
		<if test="vo.name != null and vo.name != ''">
			AND m.`name` like CONCAT('%', #{vo.name}, '%')
		</if>
		<if test="vo.nickname != null and vo.nickname != ''">
			AND m.nickname like CONCAT('%', #{vo.nickname}, '%')
		</if>
		<if test="vo.mobile != null and vo.mobile != ''">
			AND a.login_name = #{vo.mobile}
		</if>
		<if test="vo.status != null and vo.status != ''">
			AND m.`status` = #{vo.status}
		</if>
		ORDER BY m.create_time DESC
	</select>
	<select id="countHadDepositeMembers" resultType="java.lang.Integer">
		select count(DISTINCT u.uid) from user_member u
		INNER JOIN user_deposit_log l on l.uid = u.uid
	</select>
	<select id="sumDeposit" resultType="DECIMAL">
		select sum(deposit) from user_member
		where is_deleted = 0
	</select>
	
	<select id="sumDepositByCurrency" resultType="DECIMAL">
		select sum(deposit) from user_member
		where is_deleted = 0 and currency = #{currency}
	</select>
	
	<select id="findUserStats" resultMap="CountStatsMap">
		SELECT
		<if test="vo.statsType!=null and vo.statsType==&quot;1&quot; ">
			DATE_FORMAT(create_time, '%m') AS statsTime,
		</if>
		<if test="vo.statsType!=null and vo.statsType==&quot;2&quot; ">
			DATE_FORMAT(create_time, '%d') AS statsTime,
		</if>
		count(*) AS userNums
		FROM
		user_member
		WHERE
		<if test="vo.statsType!=null and vo.statsType==&quot;1&quot; ">
			DATE_FORMAT(create_time, '%Y') = #{vo.time}
		</if>
		<if test="vo.statsType!=null and vo.statsType==&quot;2&quot; ">
			DATE_FORMAT(create_time, '%Y-%m') = #{vo.time}
		</if>
		GROUP BY
		statsTime
		ORDER BY
		statsTime
	</select>
	<select id="findDepositStats" resultMap="CountStatsMap">
		SELECT
		<if test="vo.statsType!=null and vo.statsType==&quot;1&quot; ">
			DATE_FORMAT(stats_date, '%m') AS statsTime,
		</if>
		<if test="vo.statsType!=null and vo.statsType==&quot;2&quot; ">
			DATE_FORMAT(stats_date, '%d') AS statsTime,
		</if>
		deposit
		FROM
		st_stats
		WHERE 1=1
		and office_id = 1
		<if test="vo.statsType!=null and vo.statsType==&quot;1&quot; ">
			and type = 2 and DATE_FORMAT(stats_date, '%Y') = #{vo.time}
		</if>
		<if test="vo.statsType!=null and vo.statsType==&quot;2&quot; ">
			and DATE_FORMAT(stats_date, '%Y-%m') = #{vo.time}
		</if>
	</select>
	<sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
	<sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
	
	<select id="selectByExample" parameterType="vc.thinker.cabbage.user.model.MemberExample" resultMap="BOResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_member
    where uid = #{uid,jdbcType=BIGINT}
  </select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_member
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
	<delete id="deleteByExample" parameterType="vc.thinker.cabbage.user.model.MemberExample">
    delete from user_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
	<insert id="insert" parameterType="vc.thinker.cabbage.user.model.Member">
    insert into user_member (uid, name, nickname, 
      sex, height, weight, 
      birthdate, head_img_path, email, 
      mobile, status, create_by, 
      create_time, update_by, update_time, 
      is_deleted, id_card, pay_open_id, 
      remark, invite_code, auth_status, 
      ride_distance, ride_time, deposit, 
      auth_step, invited_invite_code, job_number, 
      regist_channel, vip_expires_in, vip_discount, 
      client_source, registered_ip, auth_apply_remark, 
      credentials_images, school_name, student_id, 
      auth_apply_status, motor_power, country, 
      stripe_customer_id, currency, reward_amount, 
      sys_code, is_pay_basic_cost, rectoken, 
      rectoken_lifetime)
    values (#{uid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{height,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, 
      #{birthdate,jdbcType=DATE}, #{headImgPath,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT}, #{idCard,jdbcType=VARCHAR}, #{payOpenId,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{inviteCode,jdbcType=VARCHAR}, #{authStatus,jdbcType=CHAR}, 
      #{rideDistance,jdbcType=DOUBLE}, #{rideTime,jdbcType=BIGINT}, #{deposit,jdbcType=DECIMAL}, 
      #{authStep,jdbcType=INTEGER}, #{invitedInviteCode,jdbcType=VARCHAR}, #{jobNumber,jdbcType=VARCHAR}, 
      #{registChannel,jdbcType=VARCHAR}, #{vipExpiresIn,jdbcType=TIMESTAMP}, #{vipDiscount,jdbcType=DOUBLE}, 
      #{clientSource,jdbcType=VARCHAR}, #{registeredIp,jdbcType=VARCHAR}, #{authApplyRemark,jdbcType=VARCHAR}, 
      #{credentialsImages,jdbcType=VARCHAR}, #{schoolName,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, 
      #{authApplyStatus,jdbcType=INTEGER}, #{motorPower,jdbcType=INTEGER}, #{country,jdbcType=VARCHAR}, 
      #{stripeCustomerId,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, #{rewardAmount,jdbcType=BIGINT}, 
      #{sysCode,jdbcType=VARCHAR}, #{isPayBasicCost,jdbcType=BIT}, #{rectoken,jdbcType=VARCHAR}, 
      #{rectokenLifetime,jdbcType=TIMESTAMP})
  </insert>
	<insert id="insertSelective" parameterType="vc.thinker.cabbage.user.model.Member">
    insert into user_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="birthdate != null">
        birthdate,
      </if>
      <if test="headImgPath != null">
        head_img_path,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="payOpenId != null">
        pay_open_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="inviteCode != null">
        invite_code,
      </if>
      <if test="authStatus != null">
        auth_status,
      </if>
      <if test="rideDistance != null">
        ride_distance,
      </if>
      <if test="rideTime != null">
        ride_time,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="authStep != null">
        auth_step,
      </if>
      <if test="invitedInviteCode != null">
        invited_invite_code,
      </if>
      <if test="jobNumber != null">
        job_number,
      </if>
      <if test="registChannel != null">
        regist_channel,
      </if>
      <if test="vipExpiresIn != null">
        vip_expires_in,
      </if>
      <if test="vipDiscount != null">
        vip_discount,
      </if>
      <if test="clientSource != null">
        client_source,
      </if>
      <if test="registeredIp != null">
        registered_ip,
      </if>
      <if test="authApplyRemark != null">
        auth_apply_remark,
      </if>
      <if test="credentialsImages != null">
        credentials_images,
      </if>
      <if test="schoolName != null">
        school_name,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="authApplyStatus != null">
        auth_apply_status,
      </if>
      <if test="motorPower != null">
        motor_power,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="stripeCustomerId != null">
        stripe_customer_id,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="rewardAmount != null">
        reward_amount,
      </if>
      <if test="sysCode != null">
        sys_code,
      </if>
      <if test="isPayBasicCost != null">
        is_pay_basic_cost,
      </if>
      <if test="rectoken != null">
        rectoken,
      </if>
      <if test="rectokenLifetime != null">
        rectoken_lifetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=DATE},
      </if>
      <if test="headImgPath != null">
        #{headImgPath,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="payOpenId != null">
        #{payOpenId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="inviteCode != null">
        #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="authStatus != null">
        #{authStatus,jdbcType=CHAR},
      </if>
      <if test="rideDistance != null">
        #{rideDistance,jdbcType=DOUBLE},
      </if>
      <if test="rideTime != null">
        #{rideTime,jdbcType=BIGINT},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="authStep != null">
        #{authStep,jdbcType=INTEGER},
      </if>
      <if test="invitedInviteCode != null">
        #{invitedInviteCode,jdbcType=VARCHAR},
      </if>
      <if test="jobNumber != null">
        #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="registChannel != null">
        #{registChannel,jdbcType=VARCHAR},
      </if>
      <if test="vipExpiresIn != null">
        #{vipExpiresIn,jdbcType=TIMESTAMP},
      </if>
      <if test="vipDiscount != null">
        #{vipDiscount,jdbcType=DOUBLE},
      </if>
      <if test="clientSource != null">
        #{clientSource,jdbcType=VARCHAR},
      </if>
      <if test="registeredIp != null">
        #{registeredIp,jdbcType=VARCHAR},
      </if>
      <if test="authApplyRemark != null">
        #{authApplyRemark,jdbcType=VARCHAR},
      </if>
      <if test="credentialsImages != null">
        #{credentialsImages,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="authApplyStatus != null">
        #{authApplyStatus,jdbcType=INTEGER},
      </if>
      <if test="motorPower != null">
        #{motorPower,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="stripeCustomerId != null">
        #{stripeCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="rewardAmount != null">
        #{rewardAmount,jdbcType=BIGINT},
      </if>
      <if test="sysCode != null">
        #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="isPayBasicCost != null">
        #{isPayBasicCost,jdbcType=BIT},
      </if>
      <if test="rectoken != null">
        #{rectoken,jdbcType=VARCHAR},
      </if>
      <if test="rectokenLifetime != null">
        #{rectokenLifetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
	<select id="countByExample" parameterType="vc.thinker.cabbage.user.model.MemberExample" resultType="java.lang.Integer">
    select count(*) from user_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
	<update id="updateByExampleSelective" parameterType="map">
    update user_member
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.birthdate != null">
        birthdate = #{record.birthdate,jdbcType=DATE},
      </if>
      <if test="record.headImgPath != null">
        head_img_path = #{record.headImgPath,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.payOpenId != null">
        pay_open_id = #{record.payOpenId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.inviteCode != null">
        invite_code = #{record.inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="record.authStatus != null">
        auth_status = #{record.authStatus,jdbcType=CHAR},
      </if>
      <if test="record.rideDistance != null">
        ride_distance = #{record.rideDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.rideTime != null">
        ride_time = #{record.rideTime,jdbcType=BIGINT},
      </if>
      <if test="record.deposit != null">
        deposit = #{record.deposit,jdbcType=DECIMAL},
      </if>
      <if test="record.authStep != null">
        auth_step = #{record.authStep,jdbcType=INTEGER},
      </if>
      <if test="record.invitedInviteCode != null">
        invited_invite_code = #{record.invitedInviteCode,jdbcType=VARCHAR},
      </if>
      <if test="record.jobNumber != null">
        job_number = #{record.jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.registChannel != null">
        regist_channel = #{record.registChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.vipExpiresIn != null">
        vip_expires_in = #{record.vipExpiresIn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vipDiscount != null">
        vip_discount = #{record.vipDiscount,jdbcType=DOUBLE},
      </if>
      <if test="record.clientSource != null">
        client_source = #{record.clientSource,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredIp != null">
        registered_ip = #{record.registeredIp,jdbcType=VARCHAR},
      </if>
      <if test="record.authApplyRemark != null">
        auth_apply_remark = #{record.authApplyRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.credentialsImages != null">
        credentials_images = #{record.credentialsImages,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolName != null">
        school_name = #{record.schoolName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.authApplyStatus != null">
        auth_apply_status = #{record.authApplyStatus,jdbcType=INTEGER},
      </if>
      <if test="record.motorPower != null">
        motor_power = #{record.motorPower,jdbcType=INTEGER},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.stripeCustomerId != null">
        stripe_customer_id = #{record.stripeCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.rewardAmount != null">
        reward_amount = #{record.rewardAmount,jdbcType=BIGINT},
      </if>
      <if test="record.sysCode != null">
        sys_code = #{record.sysCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isPayBasicCost != null">
        is_pay_basic_cost = #{record.isPayBasicCost,jdbcType=BIT},
      </if>
      <if test="record.rectoken != null">
        rectoken = #{record.rectoken,jdbcType=VARCHAR},
      </if>
      <if test="record.rectokenLifetime != null">
        rectoken_lifetime = #{record.rectokenLifetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
	<update id="updateByExample" parameterType="map">
    update user_member
    set uid = #{record.uid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      height = #{record.height,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      birthdate = #{record.birthdate,jdbcType=DATE},
      head_img_path = #{record.headImgPath,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      pay_open_id = #{record.payOpenId,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      invite_code = #{record.inviteCode,jdbcType=VARCHAR},
      auth_status = #{record.authStatus,jdbcType=CHAR},
      ride_distance = #{record.rideDistance,jdbcType=DOUBLE},
      ride_time = #{record.rideTime,jdbcType=BIGINT},
      deposit = #{record.deposit,jdbcType=DECIMAL},
      auth_step = #{record.authStep,jdbcType=INTEGER},
      invited_invite_code = #{record.invitedInviteCode,jdbcType=VARCHAR},
      job_number = #{record.jobNumber,jdbcType=VARCHAR},
      regist_channel = #{record.registChannel,jdbcType=VARCHAR},
      vip_expires_in = #{record.vipExpiresIn,jdbcType=TIMESTAMP},
      vip_discount = #{record.vipDiscount,jdbcType=DOUBLE},
      client_source = #{record.clientSource,jdbcType=VARCHAR},
      registered_ip = #{record.registeredIp,jdbcType=VARCHAR},
      auth_apply_remark = #{record.authApplyRemark,jdbcType=VARCHAR},
      credentials_images = #{record.credentialsImages,jdbcType=VARCHAR},
      school_name = #{record.schoolName,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      auth_apply_status = #{record.authApplyStatus,jdbcType=INTEGER},
      motor_power = #{record.motorPower,jdbcType=INTEGER},
      country = #{record.country,jdbcType=VARCHAR},
      stripe_customer_id = #{record.stripeCustomerId,jdbcType=VARCHAR},
      currency = #{record.currency,jdbcType=VARCHAR},
      reward_amount = #{record.rewardAmount,jdbcType=BIGINT},
      sys_code = #{record.sysCode,jdbcType=VARCHAR},
      is_pay_basic_cost = #{record.isPayBasicCost,jdbcType=BIT},
      rectoken = #{record.rectoken,jdbcType=VARCHAR},
      rectoken_lifetime = #{record.rectokenLifetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
	<update id="updateByPrimaryKeySelective" parameterType="vc.thinker.cabbage.user.model.Member">
    update user_member
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="birthdate != null">
        birthdate = #{birthdate,jdbcType=DATE},
      </if>
      <if test="headImgPath != null">
        head_img_path = #{headImgPath,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="payOpenId != null">
        pay_open_id = #{payOpenId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="inviteCode != null">
        invite_code = #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="authStatus != null">
        auth_status = #{authStatus,jdbcType=CHAR},
      </if>
      <if test="rideDistance != null">
        ride_distance = #{rideDistance,jdbcType=DOUBLE},
      </if>
      <if test="rideTime != null">
        ride_time = #{rideTime,jdbcType=BIGINT},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="authStep != null">
        auth_step = #{authStep,jdbcType=INTEGER},
      </if>
      <if test="invitedInviteCode != null">
        invited_invite_code = #{invitedInviteCode,jdbcType=VARCHAR},
      </if>
      <if test="jobNumber != null">
        job_number = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="registChannel != null">
        regist_channel = #{registChannel,jdbcType=VARCHAR},
      </if>
      <if test="vipExpiresIn != null">
        vip_expires_in = #{vipExpiresIn,jdbcType=TIMESTAMP},
      </if>
      <if test="vipDiscount != null">
        vip_discount = #{vipDiscount,jdbcType=DOUBLE},
      </if>
      <if test="clientSource != null">
        client_source = #{clientSource,jdbcType=VARCHAR},
      </if>
      <if test="registeredIp != null">
        registered_ip = #{registeredIp,jdbcType=VARCHAR},
      </if>
      <if test="authApplyRemark != null">
        auth_apply_remark = #{authApplyRemark,jdbcType=VARCHAR},
      </if>
      <if test="credentialsImages != null">
        credentials_images = #{credentialsImages,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        school_name = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="authApplyStatus != null">
        auth_apply_status = #{authApplyStatus,jdbcType=INTEGER},
      </if>
      <if test="motorPower != null">
        motor_power = #{motorPower,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="stripeCustomerId != null">
        stripe_customer_id = #{stripeCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="rewardAmount != null">
        reward_amount = #{rewardAmount,jdbcType=BIGINT},
      </if>
      <if test="sysCode != null">
        sys_code = #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="isPayBasicCost != null">
        is_pay_basic_cost = #{isPayBasicCost,jdbcType=BIT},
      </if>
      <if test="rectoken != null">
        rectoken = #{rectoken,jdbcType=VARCHAR},
      </if>
      <if test="rectokenLifetime != null">
        rectoken_lifetime = #{rectokenLifetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
	<update id="updateByPrimaryKey" parameterType="vc.thinker.cabbage.user.model.Member">
    update user_member
    set name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      birthdate = #{birthdate,jdbcType=DATE},
      head_img_path = #{headImgPath,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      id_card = #{idCard,jdbcType=VARCHAR},
      pay_open_id = #{payOpenId,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      invite_code = #{inviteCode,jdbcType=VARCHAR},
      auth_status = #{authStatus,jdbcType=CHAR},
      ride_distance = #{rideDistance,jdbcType=DOUBLE},
      ride_time = #{rideTime,jdbcType=BIGINT},
      deposit = #{deposit,jdbcType=DECIMAL},
      auth_step = #{authStep,jdbcType=INTEGER},
      invited_invite_code = #{invitedInviteCode,jdbcType=VARCHAR},
      job_number = #{jobNumber,jdbcType=VARCHAR},
      regist_channel = #{registChannel,jdbcType=VARCHAR},
      vip_expires_in = #{vipExpiresIn,jdbcType=TIMESTAMP},
      vip_discount = #{vipDiscount,jdbcType=DOUBLE},
      client_source = #{clientSource,jdbcType=VARCHAR},
      registered_ip = #{registeredIp,jdbcType=VARCHAR},
      auth_apply_remark = #{authApplyRemark,jdbcType=VARCHAR},
      credentials_images = #{credentialsImages,jdbcType=VARCHAR},
      school_name = #{schoolName,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=VARCHAR},
      auth_apply_status = #{authApplyStatus,jdbcType=INTEGER},
      motor_power = #{motorPower,jdbcType=INTEGER},
      country = #{country,jdbcType=VARCHAR},
      stripe_customer_id = #{stripeCustomerId,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR},
      reward_amount = #{rewardAmount,jdbcType=BIGINT},
      sys_code = #{sysCode,jdbcType=VARCHAR},
      is_pay_basic_cost = #{isPayBasicCost,jdbcType=BIT},
      rectoken = #{rectoken,jdbcType=VARCHAR},
      rectoken_lifetime = #{rectokenLifetime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>