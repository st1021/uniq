<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vc.thinker.cabbage.user.mapper.VipPayLogMapper">
  <resultMap id="BaseResultMap" type="vc.thinker.cabbage.user.model.VipPayLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="vip_discount" jdbcType="DOUBLE" property="vipDiscount" />
    <result column="vip_day" jdbcType="INTEGER" property="vipDay" />
    <result column="payment_mark" jdbcType="VARCHAR" property="paymentMark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="out_order_id" jdbcType="VARCHAR" property="outOrderId" />
    <result column="pay_order_code" jdbcType="VARCHAR" property="payOrderCode" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="cash_fee" jdbcType="DECIMAL" property="cashFee" />
    <result column="vip_card_name" jdbcType="VARCHAR" property="vipCardName" />
    <result column="vip_card_unit" jdbcType="VARCHAR" property="vipCardUnit" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BOResultMap" type="vc.thinker.cabbage.user.bo.VipPayLogBO" />
  
  <select id="findPageByVo" resultMap="BOResultMap">
  		select 
  			p.*,m.nickname,m.mobile,m.name ,m.currency
  		from 
  			user_vip_pay_log p left join user_member m on p.uid = m.uid 
  		<where>
  		
  			<if test="null != vo.payOrderCode and '' != vo.payOrderCode">
  				and p.pay_order_code like  concat('%', #{vo.payOrderCode}, '%')
  			</if>
  			<if test="null != vo.outOrderId and '' != vo.outOrderId">
  				and p.out_order_id like  concat('%', #{vo.outOrderId}, '%')
  			</if>
  			<if test="null != vo.paymentMark and '' != vo.paymentMark">
  				and p.payment_mark = #{vo.paymentMark}
  			</if>
  			<if test="null != vo.nickname and '' != vo.nickname">
  				and m.nickname like  concat('%', #{vo.nickname}, '%')
  			</if>
  			<if test="null != vo.name and '' != vo.name">
  				and m.name like  concat('%', #{vo.name}, '%')
  			</if>
  			<if test="null != vo.mobile and '' != vo.mobile">
  				and m.mobile like  concat('%', #{vo.mobile}, '%')
  			</if>
  			<if test="null != vo.status and '' != vo.status">
  				and p.status = #{vo.status}
  			</if>
  			<if test="null != vo.cardName and '' != vo.cardName">
  				and p.vip_card_name = #{vo.cardName}
  			</if>
  			<if test="null != vo.ltTime">
  				and p.pay_time <![CDATA[ <= ]]> #{vo.ltTime}
  			</if>
  			<if test="null != vo.gtTime">
  				and p.pay_time <![CDATA[ >= ]]> #{vo.gtTime} 
  			</if>
  		</where> 
  		order by p.create_time desc
  </select>
   <select id="findByStatusAndPayTime" resultMap="BOResultMap">
  		SELECT
			*
		FROM
			user_vip_pay_log 
  		where 1=1
  			<if test="status != null and status != ''">
  				and status  = #{status}
  			</if>
  			<if test="beginDate != null and beginDate != ''">
	    		and DATE_FORMAT(pay_time ,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{beginDate} ,'%Y-%m-%d')
	    	</if>
	    	<if test="endDate != null and endDate != ''">
	    		and DATE_FORMAT(pay_time ,'%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate} ,'%Y-%m-%d')
	    	</if>
  	</select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sn, uid, amount, vip_discount, vip_day, payment_mark, create_time, pay_time, 
    out_order_id, pay_order_code, status, cash_fee, vip_card_name, vip_card_unit, currency
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.cabbage.user.model.VipPayLogExample" resultMap="BOResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_vip_pay_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_vip_pay_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_vip_pay_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.cabbage.user.model.VipPayLogExample">
    delete from user_vip_pay_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="vc.thinker.cabbage.user.model.VipPayLog" useGeneratedKeys="true">
    insert into user_vip_pay_log (id, sn, uid, amount, 
      vip_discount, vip_day, payment_mark, 
      create_time, pay_time, out_order_id, 
      pay_order_code, status, cash_fee, 
      vip_card_name, vip_card_unit, currency
      )
    values (#{id,jdbcType=BIGINT}, #{sn,jdbcType=VARCHAR}, #{uid,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, 
      #{vipDiscount,jdbcType=DOUBLE}, #{vipDay,jdbcType=INTEGER}, #{paymentMark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, #{outOrderId,jdbcType=VARCHAR}, 
      #{payOrderCode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{cashFee,jdbcType=DECIMAL}, 
      #{vipCardName,jdbcType=VARCHAR}, #{vipCardUnit,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="vc.thinker.cabbage.user.model.VipPayLog" useGeneratedKeys="true">
    insert into user_vip_pay_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="vipDiscount != null">
        vip_discount,
      </if>
      <if test="vipDay != null">
        vip_day,
      </if>
      <if test="paymentMark != null">
        payment_mark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="outOrderId != null">
        out_order_id,
      </if>
      <if test="payOrderCode != null">
        pay_order_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="cashFee != null">
        cash_fee,
      </if>
      <if test="vipCardName != null">
        vip_card_name,
      </if>
      <if test="vipCardUnit != null">
        vip_card_unit,
      </if>
      <if test="currency != null">
        currency,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="vipDiscount != null">
        #{vipDiscount,jdbcType=DOUBLE},
      </if>
      <if test="vipDay != null">
        #{vipDay,jdbcType=INTEGER},
      </if>
      <if test="paymentMark != null">
        #{paymentMark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outOrderId != null">
        #{outOrderId,jdbcType=VARCHAR},
      </if>
      <if test="payOrderCode != null">
        #{payOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="cashFee != null">
        #{cashFee,jdbcType=DECIMAL},
      </if>
      <if test="vipCardName != null">
        #{vipCardName,jdbcType=VARCHAR},
      </if>
      <if test="vipCardUnit != null">
        #{vipCardUnit,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.cabbage.user.model.VipPayLogExample" resultType="java.lang.Integer">
    select count(*) from user_vip_pay_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_vip_pay_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.vipDiscount != null">
        vip_discount = #{record.vipDiscount,jdbcType=DOUBLE},
      </if>
      <if test="record.vipDay != null">
        vip_day = #{record.vipDay,jdbcType=INTEGER},
      </if>
      <if test="record.paymentMark != null">
        payment_mark = #{record.paymentMark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outOrderId != null">
        out_order_id = #{record.outOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.payOrderCode != null">
        pay_order_code = #{record.payOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.cashFee != null">
        cash_fee = #{record.cashFee,jdbcType=DECIMAL},
      </if>
      <if test="record.vipCardName != null">
        vip_card_name = #{record.vipCardName,jdbcType=VARCHAR},
      </if>
      <if test="record.vipCardUnit != null">
        vip_card_unit = #{record.vipCardUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_vip_pay_log
    set id = #{record.id,jdbcType=BIGINT},
      sn = #{record.sn,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      vip_discount = #{record.vipDiscount,jdbcType=DOUBLE},
      vip_day = #{record.vipDay,jdbcType=INTEGER},
      payment_mark = #{record.paymentMark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      out_order_id = #{record.outOrderId,jdbcType=VARCHAR},
      pay_order_code = #{record.payOrderCode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      cash_fee = #{record.cashFee,jdbcType=DECIMAL},
      vip_card_name = #{record.vipCardName,jdbcType=VARCHAR},
      vip_card_unit = #{record.vipCardUnit,jdbcType=VARCHAR},
      currency = #{record.currency,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.cabbage.user.model.VipPayLog">
    update user_vip_pay_log
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="vipDiscount != null">
        vip_discount = #{vipDiscount,jdbcType=DOUBLE},
      </if>
      <if test="vipDay != null">
        vip_day = #{vipDay,jdbcType=INTEGER},
      </if>
      <if test="paymentMark != null">
        payment_mark = #{paymentMark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outOrderId != null">
        out_order_id = #{outOrderId,jdbcType=VARCHAR},
      </if>
      <if test="payOrderCode != null">
        pay_order_code = #{payOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="cashFee != null">
        cash_fee = #{cashFee,jdbcType=DECIMAL},
      </if>
      <if test="vipCardName != null">
        vip_card_name = #{vipCardName,jdbcType=VARCHAR},
      </if>
      <if test="vipCardUnit != null">
        vip_card_unit = #{vipCardUnit,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.cabbage.user.model.VipPayLog">
    update user_vip_pay_log
    set sn = #{sn,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      vip_discount = #{vipDiscount,jdbcType=DOUBLE},
      vip_day = #{vipDay,jdbcType=INTEGER},
      payment_mark = #{paymentMark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      out_order_id = #{outOrderId,jdbcType=VARCHAR},
      pay_order_code = #{payOrderCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      cash_fee = #{cashFee,jdbcType=DECIMAL},
      vip_card_name = #{vipCardName,jdbcType=VARCHAR},
      vip_card_unit = #{vipCardUnit,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>