<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vc.thinker.cabbage.user.mapper.IntegralRuleMapper">
  <resultMap id="BaseResultMap" type="vc.thinker.cabbage.user.model.IntegralRule">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="rule_describe" jdbcType="VARCHAR" property="ruleDescribe" />
    <result column="integral_num" jdbcType="INTEGER" property="integralNum" />
    <result column="rule_code" jdbcType="VARCHAR" property="ruleCode" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BOResultMap" type="vc.thinker.cabbage.user.bo.IntegralRuleBO" />
  
  <select id="findPageByVo" resultMap="BOResultMap">
  		select 
  			r.* ,a.name createName,b.name updateName
  		from 
  			user_integral_rule r
  			left join user_admin a on r.create_by = a.uid 
			left join user_admin b on r.update_by = b.uid
  		order by r.create_time desc
  </select>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rule_describe, integral_num, rule_code, create_by, create_time, update_by, update_time
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.cabbage.user.model.IntegralRuleExample" resultMap="BOResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_integral_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_integral_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_integral_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.cabbage.user.model.IntegralRuleExample">
    delete from user_integral_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="vc.thinker.cabbage.user.model.IntegralRule" useGeneratedKeys="true">
    insert into user_integral_rule (id, rule_describe, integral_num, 
      rule_code, create_by, create_time, 
      update_by, update_time)
    values (#{id,jdbcType=BIGINT}, #{ruleDescribe,jdbcType=VARCHAR}, #{integralNum,jdbcType=INTEGER}, 
      #{ruleCode,jdbcType=VARCHAR}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="vc.thinker.cabbage.user.model.IntegralRule" useGeneratedKeys="true">
    insert into user_integral_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ruleDescribe != null">
        rule_describe,
      </if>
      <if test="integralNum != null">
        integral_num,
      </if>
      <if test="ruleCode != null">
        rule_code,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ruleDescribe != null">
        #{ruleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="integralNum != null">
        #{integralNum,jdbcType=INTEGER},
      </if>
      <if test="ruleCode != null">
        #{ruleCode,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.cabbage.user.model.IntegralRuleExample" resultType="java.lang.Integer">
    select count(*) from user_integral_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_integral_rule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.ruleDescribe != null">
        rule_describe = #{record.ruleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.integralNum != null">
        integral_num = #{record.integralNum,jdbcType=INTEGER},
      </if>
      <if test="record.ruleCode != null">
        rule_code = #{record.ruleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_integral_rule
    set id = #{record.id,jdbcType=BIGINT},
      rule_describe = #{record.ruleDescribe,jdbcType=VARCHAR},
      integral_num = #{record.integralNum,jdbcType=INTEGER},
      rule_code = #{record.ruleCode,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.cabbage.user.model.IntegralRule">
    update user_integral_rule
    <set>
      <if test="ruleDescribe != null">
        rule_describe = #{ruleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="integralNum != null">
        integral_num = #{integralNum,jdbcType=INTEGER},
      </if>
      <if test="ruleCode != null">
        rule_code = #{ruleCode,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.cabbage.user.model.IntegralRule">
    update user_integral_rule
    set rule_describe = #{ruleDescribe,jdbcType=VARCHAR},
      integral_num = #{integralNum,jdbcType=INTEGER},
      rule_code = #{ruleCode,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>